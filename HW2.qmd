---
title: "HW 2"
author: "Claire Chen"
date: today
format: pdf
editor: visual
---

```{r message=FALSE, warning=FALSE}
library(readr)
library(dplyr)
library(tidyr)
library(knitr)
library(scales)
library(haven)
library(labelled)
library(report)
library(broom)
library(ggplot2)
library(patchwork)
```

# Question 1

Import the file. Recode the variables “sex”, “race”, and “happy” to factors. Use the glimpse() function and provide the output.

```{r}
df <- read_sav(
  "https://github.com/felixthoemmes/hwdatasets/blob/master/sshw2_clean.sav?raw=true")

df <- df |>
  mutate(
    sex = to_factor(sex), 
    race = to_factor(race), 
    happy = to_factor(happy))

glimpse(df)
```

# Question 2

Generate a table (using the kable function) that shows the percentages of males and females in the total sample. Please use the summarize() function in dplyr.

```{r}
df |>
  summarize(
    Male = percent(sum(sex == "Male") / n(), accuracy = 0.01),
    Female = percent(sum(sex == "Female") / n(), accuracy = 0.01)) |>
  kable(caption = "Percentages of Males and Females in the Total Sample")
```

# Question 3

Generate a well-formatted (cross)-table that shows the percentages of males and females, within the three categories of “race”. Specifically, the table should show the percentage of male and female within each race.

```{r}
race_by_sex <- df |>
  group_by(race) |>
  summarize(
    Male = percent(sum(sex == "Male") / n(), accuracy = 0.01),
    Female = percent(sum(sex == "Female") / n(), accuracy = 0.01))

race_by_sex |> 
  kable(caption = "Precentages of Males and Females by Race")
```

# Question 4

Using ggplot, first generate a barplot of the percentages of the cross-table that you generated in the previous question. Then, using the exact same data, generate a dot plot that shows the same percentages. In a last step, ensure that the two graphs are shown side-by-side in your document.

```{r}
race_by_sex <- df |>
  group_by(race) |>
  summarize(
    Male = sum((sex == "Male") / n() *100),
    Female = sum(sum(sex == "Female") / n() * 100)) |>
  pivot_longer(cols = c(Male, Female),
               names_to = "Sex",
               values_to = "Percentage")

barplot_race_by_sex <- ggplot(race_by_sex, 
                              aes(x = race, y = Percentage, fill = Sex)) +
  geom_bar(stat = "identity") +
  labs(x = "Race", 
       y = "Percentage (%)") +
  theme(legend.position = "bottom")

dotplot_race_by_sex <- ggplot(race_by_sex, 
                              aes(x = race, y = Percentage, color = Sex)) +
  geom_point(size = 2, 
             position = position_dodge(width = 0.15)) +
  labs(x = "Race", 
       y = "Percentage (%)") +
  scale_y_continuous(limits = c(0, 100)) +
  theme(legend.position = "bottom")

combined_plot <- barplot_race_by_sex + dotplot_race_by_sex +
  plot_annotation(
    title = "Barplot and Dotplot of Percentages of Males and Females by Race")

combined_plot
```

# Question 5

Using dplyr, compute and report the percentage of respondents that have a value of “Very Happy” on the variable called “happy”. Then report the percentage of males and females within the “Very Happy” category. Display all this information in a single table.

```{r}
happy_group <- df |>
  summarize(Overall = percent(sum(happy == "Very Happy", na.rm = TRUE) / n(),
                              accuracy = 0.01))

happy_by_sex <- df |>
  filter(happy == "Very Happy") |>
  summarize(Males = percent(sum(sex == "Male") / n(), accuracy = 0.01),
            Females = percent(sum(sex == "Female") / n(), accuracy = 0.01))

combined_happy <- bind_cols(happy_group, happy_by_sex)

combined_happy |>
  kable(caption = "Percentages of 'Very Happy' in Overall Sample & by Sex")
```

# Question 6

Using ggplot, construct a kernel density estimate of the variable “age”, but separately for males and females. Make sure to overlay the two kernel density estimates in a single plot, and visually separate them by using different colors for males and females. Then add two vertical lines for the mean age for males, and the mean age for females. Add meaningful labels to all axes and add a caption to the plot.

```{r}
mean_ages <- df |>
  group_by(sex) |>
  summarize(mean_age = mean(age))

ggplot(df, aes(x = age, fill = sex, color = sex)) +
  geom_density(alpha = 0.3) +
  geom_vline(data = mean_ages, 
             aes(xintercept = mean_age, color = sex), 
             linewidth = 0.5) +
  labs(title = "Kernel Density Estimate of Age by Sex with Mean Age Lines",
       x = "Age",
       y = "Density") +
  theme(legend.position = "bottom") +
  theme(plot.title = element_text(size = 12))
```

# Question 7

Construct a new variable “agebin” that creates three distinct age categories, defined as: young: age \<= 20, middle-aged: 21 \<= age \<= 50, older: age \>= 51. Then construct a barplot of the frequencies of these three categories.

```{r}
df <- df |>
  mutate(
    agebin = case_when(
      age <= 20 ~ "young",
      age >= 21 & age <= 50 ~ "middle-aged",
      age >= 51 ~ "old"))

ggplot(df, aes(x = agebin)) +
  geom_bar() +
  scale_x_discrete(limits = c("young", "middle-aged", "old")) +
  labs(title = "Frequencies of Age Bins", x = "Age Bins", y = "Frequency")
```
